Wed Jan 26 18:19:39 CET 2005	Michael Neumann	<mneumann@ntecs.de>

	* updated docs

	* made Component#call's marshallable by using an object of class
	  Wee::Component::OnAnswer instead of a Proc.  

	* Moved all continuation-dependent code into directory
	  wee/continuation. By default Wee uses no continuations, you have to
	  require 'wee/continuation' to enable them.

Wed Jan 26 13:51:22 CET 2005	Michael Neumann	<mneumann@ntecs.de>

	* If you pass nil to an attribute method of a Brush, e.g.

	    r.table_data.width(nil)

	  This will remove the 'width' attribute from the tag.
	
	* Method HtmlCanvas#javascript added:

	    # external javascript resource
	    r.javascript.src('/test.js') 

	    # internal javascript 
	    r.javascript.with('function js() { ... }')

	* Method Presenter.uses_property added. Used to declare required
	  properties. This has actually no effect. It's sole purpose is to 
	  describe the dependencies.

NO DATE AVAILABLE		Michael Neumann <mneumann@ntecs.de>

	* Enable Socket.do_not_reverse_lookup in WEBrickAdaptor by default, as
	  this has been the reason for much slowliness

	* Method Component#add_child returns the child so that the following
	  code becomes possible:

	    @pager = add_child Pager.new(...)

	* Added experimental property system.

	* Added methods GenericTagBrush#onclick_callback, HtmlCanvas#link_css,
	  lots of refactoring

	* New examples: hw.rb, live-update.rb, calculator.rb  

	* Wee::Brush::InputTag: methods #disabled and #readonly added

	* Wee::Utils.app_for takes now (optionally) a block.

	* Wee::MessageBox, Wee::WrapperDecoration, Wee::FromDecoration added

	* Wee::Session#current_page, #current_context methods added

	* added ground-work for live-updates (see examples/live-update.rb)

	* added wee/databases/og.rb, which defines OgApplication and
	  OgSession, as well as a generic (but still very limited)
	  OgScaffolder. 

	* Methods Wee::Session#sleep and #awake added, which are called before and
	  after the request is handled. They can be used for example to setup
	  and release a database connection.

	* Wee::Helper.app_for is now Wee::Utils.app_for

	* require 'wee/utils' will load all utility methods.
