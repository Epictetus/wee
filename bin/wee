#!/usr/bin/env ruby
require 'wee'

def usage
  puts <<-USAGE

NAME
     wee - creates a new Wee installation

SYNOPSIS
     wee create [full path]
     wee create-simple [full path]
     wee create-og [full path]

DESCRIPTION
     This will create a suggested directory structure as well as some
     files to get you quickly started running a simple Wee application.
     For further information have a look at the README file in the
     created directory.

     "create-simple" is an alias for "create". "create-og" creates a
     simple Wee application that uses a database and the 
     Og (ObjectGraph) OR mapper.


EXAMPLE

     wee create ~/my-wee-project

     This will generate a new Wee installation in the ~/my-wee-project
     folder.
USAGE
  exit 1
end

require 'ftools'

SKEL_DIR = File.join(Wee::LibPath, 'wee', 'skeleton')

def run
  case command = ARGV[0] || usage()
  when 'create', 'create-simple'
    path = ARGV[1] || usage()
    path = File.expand_path(path)

    if File.exists?(path)
      STDERR.puts "ERROR: Path #{ path } already exists! Aborting!"
      exit 1
    end

    src = File.join(SKEL_DIR, 'simple')

    File.makedirs path
    File.makedirs File.join(path, 'components')

    File.copy File.join(src, 'run.rb'), path, true
    File.copy File.join(src, 'README'), path, true
    File.copy File.join(src, 'components', 'main.rb'), File.join(path, 'components'), true

  when 'create-og'

    path = ARGV[1] || usage()
    path = File.expand_path(path)

    if File.exists?(path)
      STDERR.puts "ERROR: Path #{ path } already exists! Aborting!"
      exit 1
    end

    src = File.join(SKEL_DIR, 'og')

    File.makedirs path
    File.makedirs File.join(path, 'components')
    File.makedirs File.join(path, 'models')
    File.makedirs File.join(path, 'conf')

    File.copy File.join(src, 'run.rb'), path, true
    File.copy File.join(src, 'README'), path, true
    File.copy File.join(src, 'components', 'main.rb'), File.join(path, 'components'), true
    File.copy File.join(src, 'models', 'recipe.rb'), File.join(path, 'models'), true

    cfg = File.read(File.join(src, 'conf', 'db.rb'))
    cfg = cfg.gsub('%%db%%', get_username).gsub('%%user%%', get_username)
    File.open(File.join(path, 'conf', 'db.rb'), 'w+') {|f| f << cfg }

  else
    usage()
  end
end

def get_username
  begin
    require 'etc'
    Etc.getlogin
  rescue LoadError
    'xxx'
  end
end

run()
